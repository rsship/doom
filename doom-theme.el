;; ~/.config/doom/doom-theme.el

(deftheme my-theme "A custom theme based on a Neovim color schema.")

(let ((class '((class color) (min-colors 89)))
      (constant "#C88623")
      (type "#FBBE1C")
      (string "#B58913")
      (search-fg "#FFFFFF")
      (search-bg "#C88623")
      (incsearch-bg "#FBBE1C")
      (matchparen-fg "#191919")
      (matchparen-bg "#C88623"))

  (custom-theme-set-faces
   'my-theme
   `(default ((,class (:background nil :foreground ,constant))))
   `(font-lock-constant-face ((,class (:foreground ,constant))))
   `(font-lock-type-face ((,class (:foreground ,type))))
   `(font-lock-keyword-face ((,class (:foreground ,type))))
   `(font-lock-string-face ((,class (:foreground ,string))))
   `(font-lock-builtin-face ((,class (:foreground ,constant))))
   `(font-lock-variable-name-face ((,class (:foreground ,constant))))
   `(font-lock-function-name-face ((,class (:foreground ,constant))))
   `(font-lock-comment-face ((,class (:foreground ,constant :slant italic))))
   `(font-lock-warning-face ((,class (:foreground ,type :weight bold))))
   `(highlight ((,class (:background ,constant :foreground ,matchparen-fg))))
   `(region ((,class (:background ,search-bg :foreground ,search-fg))))
   `(isearch ((,class (:background ,search-bg :foreground ,search-fg))))
   `(lazy-highlight ((,class (:background ,incsearch-bg :foreground ,search-fg))))
   `(match ((,class (:background ,matchparen-bg :foreground ,matchparen-fg))))
   `(show-paren-match ((,class (:background ,matchparen-bg :foreground ,matchparen-fg))))
   `(minibuffer-prompt ((,class (:foreground ,type :weight bold))))
   `(link ((,class (:foreground ,constant :underline t))))
   `(link-visited ((,class (:foreground ,constant :underline t))))
   `(fringe ((,class (:background nil))))
   `(cursor ((,class (:background ,constant))))
   `(mode-line ((,class (:background ,constant :foreground ,matchparen-fg))))
   `(mode-line-inactive ((,class (:background nil :foreground ,constant))))
   `(vertical-border ((,class (:foreground ,constant))))
   `(secondary-selection ((,class (:background ,constant))))
   `(trailing-whitespace ((,class (:background ,constant))))
   ))

(provide-theme 'my-theme)
